{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Hangman.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar listWords = [];\nasync function fetchData(url) {\n  axios(url).then(function (response) {\n    return response.data;\n  });\n}\nasync function generateWords(w) {\n  const file = \"https://raw.githubusercontent.com/eelanpy/eelanwebs/main/hangman/data.json\";\n  var words = await fetchData(file);\n  console.log(words);\n  return listWords;\n}\nasync function Hangman() {\n  _s();\n  const [word, setWord] = useState(\"\");\n  const [notLetters, setNotLetters] = useState(\"\");\n  const ChangeValue = event => {\n    setWord(event.target.value);\n  };\n  const ChangeNotLetter = event => {\n    setNotLetters(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"element\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This game is to see available choices for your hangman round. Replace missing letters with dots. If there are letters that are not in the word, make sure to put it in the second input box and don't seperate each letter with a comma: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Your word: \",\n      value: word,\n      onChange: ChangeValue,\n      autoFocus: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Letters that are not in the word:\",\n      value: notLetters,\n      onChange: ChangeNotLetter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: await generateWords(word, notLetters).map(word => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(Hangman, \"WTwrkC9Eoyr6gXQ0dD8MtIYh6Bo=\");\n_c = Hangman;\nexport default Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["useState","axios","jsxDEV","_jsxDEV","listWords","fetchData","url","then","response","data","generateWords","w","file","words","console","log","Hangman","_s","word","setWord","notLetters","setNotLetters","ChangeValue","event","target","value","ChangeNotLetter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","autoFocus","map","_c","$RefreshReg$"],"sources":["/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Hangman.js"],"sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\n\nvar listWords = [];\n\nasync function fetchData(url) {\n    axios(url).then(function (response) {\n        return response.data;\n    })\n}\n\nasync function generateWords(w) {\n    const file = \"https://raw.githubusercontent.com/eelanpy/eelanwebs/main/hangman/data.json\"\n    var words = await fetchData(file);\n\n\n\n    console.log(words);\n    return (listWords)\n}\n\n\nasync function Hangman() {\n    const [word, setWord] = useState(\"\")\n    const [notLetters, setNotLetters] = useState(\"\")\n    const ChangeValue = (event) => {\n        setWord(event.target.value);\n    }\n\n    const ChangeNotLetter = (event) => {\n        setNotLetters(event.target.value);\n    }\n\n    return (\n        <div className=\"element\">\n            <h1>This game is to see available choices for your hangman round. Replace missing letters with dots. If there are letters that are not in the word, make sure to put it in the second input box and don't seperate each letter with a comma: </h1>\n            <input placeholder=\"Your word: \" value={word} onChange={ChangeValue} autoFocus />\n            <br /><br />\n            <input placeholder=\"Letters that are not in the word:\" value={notLetters} onChange={ChangeNotLetter} />\n            <ul>\n                {await generateWords(word, notLetters).map(word =>\n                    <li>{word}</li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nexport default Hangman; "],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,IAAIC,SAAS,GAAG,EAAE;AAElB,eAAeC,SAASA,CAACC,GAAG,EAAE;EAC1BL,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,CAAC,UAAUC,QAAQ,EAAE;IAChC,OAAOA,QAAQ,CAACC,IAAI;EACxB,CAAC,CAAC;AACN;AAEA,eAAeC,aAAaA,CAACC,CAAC,EAAE;EAC5B,MAAMC,IAAI,GAAG,4EAA4E;EACzF,IAAIC,KAAK,GAAG,MAAMR,SAAS,CAACO,IAAI,CAAC;EAIjCE,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EAClB,OAAQT,SAAS;AACrB;AAGA,eAAeY,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,UAAU,EAAEC,aAAa,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMsB,WAAW,GAAIC,KAAK,IAAK;IAC3BJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,eAAe,GAAIH,KAAK,IAAK;IAC/BF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBACItB,OAAA;IAAKwB,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBzB,OAAA;MAAAyB,QAAA,EAAI;IAAyO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClP7B,OAAA;MAAO8B,WAAW,EAAC,aAAa;MAACR,KAAK,EAAEP,IAAK;MAACgB,QAAQ,EAAEZ,WAAY;MAACa,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAAA7B,OAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACZ7B,OAAA;MAAO8B,WAAW,EAAC,mCAAmC;MAACR,KAAK,EAAEL,UAAW;MAACc,QAAQ,EAAER;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvG7B,OAAA;MAAAyB,QAAA,EACK,MAAMlB,aAAa,CAACQ,IAAI,EAAEE,UAAU,CAAC,CAACgB,GAAG,CAAClB,IAAI,iBAC3Cf,OAAA;QAAAyB,QAAA,EAAKV;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACf,EAAA,CAxBcD,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AA0BtB,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}