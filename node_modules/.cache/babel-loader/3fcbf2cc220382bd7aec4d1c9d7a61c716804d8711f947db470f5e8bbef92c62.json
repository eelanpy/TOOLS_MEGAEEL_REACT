{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from './data.json';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Number() {\n  _s();\n  const [max, setMax] = useState(0);\n  const ChangeValue = event => {\n    setMax(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-primary\",\n        onClick: ChangeValue,\n        value: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Number, \"BE7depYePpeItbqPxZp9AVqKCUM=\");\n_c = Number;\nexport default Number;\nvar _c;\n$RefreshReg$(_c, \"Number\");","map":{"version":3,"names":["useState","data","Col","Form","Row","Container","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","Number","_s","max","setMax","ChangeValue","event","target","value","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js"],"sourcesContent":["import { useState } from 'react'\nimport data from './data.json'\n\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport Container from 'react-bootstrap/Container'\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\n\nfunction Number () {\n  const [max, setMax] = useState(0)\n  const ChangeValue = event => {\n    setMax(event.target.value)\n  }\n\n  return (\n    <>\n      <Container>\n        <Button\n          variant='outline-primary'\n          onClick={ChangeValue}\n          value='primary'\n        ></Button>\n      </Container>\n    </>\n  )\n}\n\nexport default Number\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,aAAa;AAE9B,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AAErC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAO,sCAAsC;AAC7C;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEA,SAASC,MAAMA,CAAA,EAAI;EAAAC,EAAA;EACjB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAMe,WAAW,GAAGC,KAAK,IAAI;IAC3BF,MAAM,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC5B,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAS,QAAA,eACEX,OAAA,CAACH,SAAS;MAAAc,QAAA,eACRX,OAAA,CAACF,MAAM;QACLc,OAAO,EAAC,iBAAiB;QACzBC,OAAO,EAAEN,WAAY;QACrBG,KAAK,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACZ,CAAC;AAEP;AAACb,EAAA,CAjBQD,MAAM;AAAAe,EAAA,GAANf,MAAM;AAmBf,eAAeA,MAAM;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}