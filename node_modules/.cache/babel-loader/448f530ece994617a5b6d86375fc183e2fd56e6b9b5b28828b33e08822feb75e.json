{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from './data.json';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Number() {\n  _s();\n  const [max, setMax] = useState(0);\n  const changeValue = e => {\n    setMax(parseInt(e.target.value));\n    e.target.checked = true;\n  };\n  console.log(max);\n  eturn( /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: \"secondary\",\n        checked: checked,\n        value: \"1\",\n        onChange: e => setChecked(e.currentTarget.checked),\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: \"secondary\",\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      className: \"mb-2\",\n      id: \"toggle-check\",\n      type: \"checkbox\",\n      variant: \"outline-primary\",\n      checked: checked,\n      value: \"1\",\n      onChange: e => setChecked(e.currentTarget.checked),\n      children: \"Checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: idx % 2 ? 'outline-success' : 'outline-danger',\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true));\n}\n_s(Number, \"BE7depYePpeItbqPxZp9AVqKCUM=\");\n_c = Number;\nexport default Number;\nvar _c;\n$RefreshReg$(_c, \"Number\");","map":{"version":3,"names":["useState","data","Col","Form","Row","Container","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Number","_s","max","setMax","changeValue","e","parseInt","target","value","checked","console","log","eturn","children","ButtonGroup","className","id","type","variant","onChange","setChecked","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","radios","map","radio","idx","name","radioValue","setRadioValue","_c","$RefreshReg$"],"sources":["/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js"],"sourcesContent":["import { useState } from 'react'\nimport data from './data.json'\n\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport Container from 'react-bootstrap/Container'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\n\nfunction Number () {\n  const [max, setMax] = useState(0)\n  const changeValue = e => {\n    setMax(parseInt(e.target.value))\n    e.target.checked = true\n  }\n  console.log(max)\n\n  eturn(\n    <>\n      <ButtonGroup className='mb-2'>\n        <ToggleButton\n          id='toggle-check'\n          type='checkbox'\n          variant='secondary'\n          checked={checked}\n          value='1'\n          onChange={e => setChecked(e.currentTarget.checked)}\n        >\n          Checked\n        </ToggleButton>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup className='mb-2'>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type='radio'\n            variant='secondary'\n            name='radio'\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={e => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      <br />\n      <ToggleButton\n        className='mb-2'\n        id='toggle-check'\n        type='checkbox'\n        variant='outline-primary'\n        checked={checked}\n        value='1'\n        onChange={e => setChecked(e.currentTarget.checked)}\n      >\n        Checked\n      </ToggleButton>\n      <br />\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type='radio'\n            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\n            name='radio'\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={e => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default Number\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}