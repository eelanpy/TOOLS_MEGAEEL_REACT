{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport data from './data.json';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Number() {\n  _s();\n  const [max, setMax] = useState(0);\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState('1');\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  const changeValue = e => {\n    setMax(parseInt(e.target.value));\n    e.target.checked = true;\n  };\n  console.log(max);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: \"toggle-check\",\n        type: \"checkbox\",\n        variant: \"secondary\",\n        checked: checked,\n        value: \"1\",\n        onChange: e => setChecked(e.currentTarget.checked),\n        children: \"Checked\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      className: \"mb-2\",\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: \"secondary\",\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n      className: \"mb-2\",\n      id: \"toggle-check\",\n      type: \"checkbox\",\n      variant: \"outline-primary\",\n      checked: checked,\n      value: \"1\",\n      onChange: e => setChecked(e.currentTarget.checked),\n      children: \"Checked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n        id: `radio-${idx}`,\n        type: \"radio\",\n        variant: idx % 2 ? 'outline-success' : 'outline-danger',\n        name: \"radio\",\n        value: radio.value,\n        checked: radioValue === radio.value,\n        onChange: e => setRadioValue(e.currentTarget.value),\n        children: radio.name\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Number, \"LpWggSg5kDWk8fd8hhS6Q6yupYM=\");\n_c = Number;\nexport default Number;\nvar _c;\n$RefreshReg$(_c, \"Number\");","map":{"version":3,"names":["useState","data","Col","Form","Row","Container","ToggleButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Number","_s","max","setMax","checked","setChecked","radioValue","setRadioValue","radios","name","value","changeValue","e","parseInt","target","console","log","children","ButtonGroup","className","id","type","variant","onChange","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","map","radio","idx","_c","$RefreshReg$"],"sources":["/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js"],"sourcesContent":["import { useState } from 'react'\nimport data from './data.json'\n\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport Container from 'react-bootstrap/Container'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import \"./App.css\"\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\n\nfunction Number () {\n  const [max, setMax] = useState(0)\n  const [checked, setChecked] = useState(false)\n  const [radioValue, setRadioValue] = useState('1')\n\n  const radios = [\n    { name: 'Active', value: '1' },\n    { name: 'Radio', value: '2' },\n    { name: 'Radio', value: '3' }\n  ]\n  const changeValue = e => {\n    setMax(parseInt(e.target.value))\n    e.target.checked = true\n  }\n  console.log(max)\n\n  return (\n    <>\n      <ButtonGroup className='mb-2'>\n        <ToggleButton\n          id='toggle-check'\n          type='checkbox'\n          variant='secondary'\n          checked={checked}\n          value='1'\n          onChange={e => setChecked(e.currentTarget.checked)}\n        >\n          Checked\n        </ToggleButton>\n      </ButtonGroup>\n      <br />\n      <ButtonGroup className='mb-2'>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type='radio'\n            variant='secondary'\n            name='radio'\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={e => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n      <br />\n      <ToggleButton\n        className='mb-2'\n        id='toggle-check'\n        type='checkbox'\n        variant='outline-primary'\n        checked={checked}\n        value='1'\n        onChange={e => setChecked(e.currentTarget.checked)}\n      >\n        Checked\n      </ToggleButton>\n      <br />\n      <ButtonGroup>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            key={idx}\n            id={`radio-${idx}`}\n            type='radio'\n            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\n            name='radio'\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={e => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n      </ButtonGroup>\n    </>\n  )\n}\n\nexport default Number\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}