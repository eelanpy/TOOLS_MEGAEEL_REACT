{"ast":null,"code":"var _jsxFileName = \"/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport data from './data.json';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport { createElement } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst e = React.createElement;\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\nconst guesses = [];\nfunction LetUserPick(props) {\n  _s();\n  const [validated, setValidated] = useState(false);\n  const [correctGuess, setCorrectGuess] = useState(false);\n  function storeAndCheck(e) {\n    console.log(e.key);\n    if (e.key == 'Enter') {\n      guesses.push(e.target.value);\n    }\n    guesses.push(e.target.value);\n  }\n  useEffect(() => {\n    function storeAndCheck(e) {\n      guesses.push(e.target.value);\n    }\n    console.log(guesses);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: true,\n        lg: \"2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            className: 'm-2',\n            style: {\n              visibility: props.isChecked ? 'visible' : 'hidden'\n            },\n            autoFocus: true,\n            placeholder: \"Your Guess:\",\n            onKeyDown: e => storeAndCheck(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(LetUserPick, \"JnU1q8mUdjH6O5WB5ayauMDZcOY=\");\n_c = LetUserPick;\nfunction Number() {\n  _s2();\n  const [max, setMax] = useState('');\n  const [isChecked, setChecked] = useState(false);\n  const nums = [{\n    value: 10\n  }, {\n    value: 25\n  }, {\n    value: 50\n  }, {\n    value: 100\n  }, {\n    value: 500\n  }, {\n    value: 1000\n  }];\n  const change = e => {\n    setMax(parseInt(e.target.value));\n    setChecked(true);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pick a number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: \"5\",\n        children: nums.map((num, idx) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${idx}`,\n            className: \"m-1\",\n            type: \"radio\",\n            variant: \"outline-primary\",\n            name: \"radio\",\n            value: num.value,\n            checked: max === parseInt(num.value),\n            onChange: e => change(e),\n            disabled: isChecked,\n            children: num.value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GenerateRandomNum, {\n      max: max,\n      isChecked: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s2(Number, \"P9qQHlmXq/fVQoO9/TpKYABoR7Y=\");\n_c2 = Number;\nconst GenerateRandomNum = props => {\n  const num = props.max;\n  var randomNum = Math.floor(Math.random() * (num - 1)) + 1;\n  if (randomNum % 5 == 0) {\n    randomNum = Math.floor(Math.random() * (num - 1)) + 1;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LetUserPick, {\n      randomNum: randomNum,\n      isChecked: props.isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = GenerateRandomNum;\nexport default Number;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LetUserPick\");\n$RefreshReg$(_c2, \"Number\");\n$RefreshReg$(_c3, \"GenerateRandomNum\");","map":{"version":3,"names":["React","useEffect","useState","data","Col","Form","Row","Container","ButtonGroup","ToggleButton","createElement","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","e","guesses","LetUserPick","props","_s","validated","setValidated","correctGuess","setCorrectGuess","storeAndCheck","console","log","key","push","target","value","children","className","xs","lg","Group","Control","type","style","visibility","isChecked","autoFocus","placeholder","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","Number","_s2","max","setMax","setChecked","nums","change","parseInt","map","num","idx","id","variant","name","checked","onChange","disabled","GenerateRandomNum","_c2","randomNum","Math","floor","random","_c3","$RefreshReg$"],"sources":["/Users/eelank/TOOLS_MEGAEEL_REACT/megaeel/src/Number.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport data from './data.json'\n\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row'\n\nimport Container from 'react-bootstrap/Container'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport { createElement } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from 'react-bootstrap/Button'\nconst e = React.createElement\n\n// function generateWords (w, notLetters) {\n//   w = w.toLowerCase()\n\n//   notLetters = notLetters.toLowerCase()\n//   var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/\n\n//   const words = data.words\n//   var wordsFnd = []\n//   var no_letters_pattern\n//   if (notLetters.length < 1) {\n//     no_letters_pattern = new RegExp('^[^]*$')\n//   } else {\n//     no_letters_pattern = new RegExp('^[^' + notLetters + ']*$')\n//   }\n//   var pattern = new RegExp(w, 'g')\n//   for (let i = 0; i < words.length; i++) {\n//     if (\n//       words[i].match(pattern) != null &&\n//       words[i].match(pattern)[0].length == words[i].length &&\n//       words[i].match(no_letters_pattern) != null\n//     ) {\n//       const word =\n//         words[i][0].toUpperCase() +\n//         words[i].slice(1, words[i].length).toLowerCase()\n//       wordsFnd.push(word)\n//     } else {\n//       // alert(\"Couldn't find it!\")\n//     }\n//   }\n\n//   return wordsFnd\n// }\nconst guesses = []\nfunction LetUserPick (props) {\n  const [validated, setValidated] = useState(false)\n  const [correctGuess, setCorrectGuess] = useState(false)\n\n  function storeAndCheck (e) {\n    console.log(e.key)\n    if (e.key == 'Enter') {\n      guesses.push(e.target.value)\n    }\n    guesses.push(e.target.value)\n  }\n\n  useEffect(() => {\n    function storeAndCheck (e) {\n      guesses.push(e.target.value)\n    }\n    console.log(guesses)\n  })\n\n  return (\n    <>\n      <Row className='justify-content-md-center'>\n        <Col xs lg='2'>\n          <Form.Group>\n            <Form.Control\n              type='text'\n              className={'m-2'}\n              style={{ visibility: props.isChecked ? 'visible' : 'hidden' }}\n              autoFocus={true}\n              placeholder='Your Guess:'\n              onKeyDown={e => storeAndCheck(e)}\n            />\n          </Form.Group>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nfunction Number () {\n  const [max, setMax] = useState('')\n  const [isChecked, setChecked] = useState(false)\n\n  const nums = [\n    { value: 10 },\n    { value: 25 },\n    { value: 50 },\n    { value: 100 },\n    { value: 500 },\n    { value: 1000 }\n  ]\n\n  const change = e => {\n    setMax(parseInt(e.target.value))\n    setChecked(true)\n  }\n\n  return (\n    <Container>\n      <h1>Pick a number:</h1>\n      <Row className='justify-content-md-center'>\n        <Col lg='5'>\n          {nums.map((num, idx) => (\n            <>\n              <ToggleButton\n                key={idx}\n                id={`radio-${idx}`}\n                className='m-1'\n                type='radio'\n                variant='outline-primary'\n                name='radio'\n                value={num.value}\n                checked={max === parseInt(num.value)}\n                onChange={e => change(e)}\n                disabled={isChecked}\n              >\n                {num.value}\n              </ToggleButton>\n            </>\n          ))}\n        </Col>\n      </Row>\n\n      <GenerateRandomNum max={max} isChecked={isChecked} />\n    </Container>\n  )\n}\n\nconst GenerateRandomNum = props => {\n  const num = props.max\n  var randomNum = Math.floor(Math.random() * (num - 1)) + 1\n  if (randomNum % 5 == 0) {\n    randomNum = Math.floor(Math.random() * (num - 1)) + 1\n  }\n\n  return (\n    <>\n      <LetUserPick randomNum={randomNum} isChecked={props.isChecked} />\n    </>\n  )\n}\n\nexport default Number\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}